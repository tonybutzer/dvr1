#!/usr/bin/env python
# coding: utf-8

# %load_ext autoreload
# %autoreload 2 


# %load watch_now
#!/usr/bin/env python


import os
import sys

import xmltodict
from datetime import datetime, timezone, timedelta



from libdvr.titan_classes import get_files_titan_tvpi, get_xml_tvpi, t_schedule_record
from libdvr.titan_classes import init_dvr


logger = init_dvr()


"""
Reads two arguments (station and start) from the command line and prints them.

Args:
    None

Raises:
    SystemExit: If the number of arguments is not 3.
"""
if len(sys.argv) != 4:
    print("Usage: python your_script.py <station> <start>")
    sys.exit(1)

station = sys.argv[1]
start = sys.argv[2]
duration = sys.argv[3]

print(f"Station: {station}")
print(f"Start: {start}")
print(f"Duration: {duration}")


my_fields = {}
my_fields['title'] = 'gen_test'

my_fields['episode'] = 'One'

chan = station
my_fields['station']=station
minor = my_fields['minor'] = '1'

number = int(duration)
formatted_string = f"{number:04d}"
result = f"{formatted_string[:2]}:{formatted_string[2:]}"
print(result)
my_fields['duration'] = result #'00:55'
my_fields['vchan'] = f'v{chan}'

now = datetime.now()
my_fields['title'] = f'v{station}_{now}'

# Get today's date and time
today = datetime.now()

time_str = start

# Extract the hours (first two characters)
hours = int(time_str[:2])

# Extract the minutes (last two characters)
minutes = int(time_str[2:])


# Create a new datetime object with today's date and the time 15:00
new_datetime = today.replace(hour=hours, minute=minutes, second=0, microsecond=0)

print(new_datetime)


current_time = new_datetime.strftime('%Y%m%d%H%M')

at_time = current_time
print(at_time)
my_fields['at_time'] = at_time


t_schedule_record(my_fields)
    
